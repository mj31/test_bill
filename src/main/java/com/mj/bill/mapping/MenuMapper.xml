<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.mj.bill.dao.IMenuDao">

	<resultMap id="RM_Menu" type="com.mj.bill.pojo.Menu">
        <result property="id" column="id"/>
        <result property="menuUrl" column="menu_url"/>
        <result property="menuName" column="menu_name"/>
        <result property="status" column="status"/>
        
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		id,menu_url,menu_name,status
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO menu (
        	id ,
        	menu_url ,
        	menu_name ,
        	status 
        ) VALUES (
        	#{id} ,
        	#{menuUrl} ,
        	#{menuName} ,
        	#{status} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
	
	
     <sql id="update_sql">
         <set>
                <if test="menuUrl != null and menuUrl != ''">
	         	menu_url = #{menuUrl} ,
	         </if>
                <if test="menuName != null and menuName != ''">
	         	menu_name = #{menuName} ,
	         </if>
                <if test="status != null">
	         	status = #{status} ,
	         </if>
	         
       </set>
    </sql>
    
	<update id="update" >
	        UPDATE  menu
	    <include refid="update_sql" />
	        WHERE 
	                id = #{id} 
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM menu WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="RM_Menu">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM menu 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
               <if test="id != null">
		             AND id = #{id}
	           </if>
                <if test="menuUrl != null and menuUrl !=''">
		             AND menu_url = #{menuUrl}
	            </if>
                <if test="menuName != null and menuName !=''">
		             AND menu_name = #{menuName}
	            </if>
               <if test="status != null">
		             AND status = #{status}
	           </if>
		</where>
	</sql>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM menu 
		<include refid="findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="RM_Menu">
    	SELECT <include refid="columns" />
	    FROM menu 
		<include refid="findPage_where"/>
    </select>

	
</mapper>

