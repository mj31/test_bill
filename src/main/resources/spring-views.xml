<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- ========================= VIEW定义 ========================= -->
    <!-- velocity视图解析 -->
    <bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <!-- 视图文件的后缀名 -->
        <property name="suffix" value=".vm"/>
        <!--是否开放request属性-->
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true" />
        <property name="allowRequestOverride" value="true"/>
        <!--是否使用spring对宏定义的支持-->
        <property name="exposeSpringMacroHelpers" value="true"/>
        <!--request属性引用名称-->
        <property name="requestContextAttribute" value="request"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <!--toolbox配置文件路径-->
        <property name="toolboxConfigLocation" value="/WEB-INF/tools.xml" />
        <!--日期函数名称-->
        <property name="dateToolAttribute" value="date" />
        <!--数字函数名称-->
        <property name="numberToolAttribute" value="number" />
        <property name="viewClass" value="com.mj.commons.util.VelocityToolbox2View" />
        <property name="order" value="0" />
    </bean>
    <bean id="velocityConfigurer"
          class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="configLocation">
            <value>classpath:velocity.properties</value>
        </property>
        <!-- spring 这里用的其实的FileResourceLoader 写死在类里面了 -->
        <property name="resourceLoaderPath">
            <value>WEB-INF/views/</value>
        </property>
    </bean>

    <!-- file Load -->
    <bean id="velocityEngine" factory-bean="velocityConfigurer" factory-method="createVelocityEngine"/>

    <!-- 内容协商视图解析器；根据客户端的不同的请求决定不同的 view进行响应, 如 /blog/1.json /blog/1.xml -->
    <!-- 会自动根据解析的contentType来决定使用哪个视图解析器（默认使用整个web应用中的viewResolver） -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <!-- 内容协商管理器 用于决定media type -->
        <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        <!-- 默认视图 放在解析链最后 -->
        <property name="defaultViews">
            <list>
                <!--<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>-->
                <bean class="com.alibaba.fastjson.support.spring.FastJsonJsonView"/>
                <!--<bean class="org.springframework.web.servlet.view.xml.MarshallingView"/>-->
            </list>
        </property>
        <property name="order" value="1" />
    </bean>

    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="2" />
    </bean>

    <!-- 默认跳转URL -->
    <mvc:view-controller path="/" view-name="redirect:/index.html"/>

    <!--定义异常处理页面-->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="statusCodes">
            <props>
                <prop key="error/400">400</prop>
                <prop key="error/403">403</prop>
                <prop key="error/404">404</prop>
                <prop key="error/500">500</prop>
                <prop key="error/503">503</prop>
                <prop key="error/error">500</prop>
            </props>
        </property>
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception">error/error</prop>
            </props>
        </property>
    </bean>

</beans>